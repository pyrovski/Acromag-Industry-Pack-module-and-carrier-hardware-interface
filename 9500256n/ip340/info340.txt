













                                    Acromag, Inc.
                                  30765 S.Wixom Road
                                    P.O. Box 437
                              Wixom, Michigan 48393-7037

                                Phone: (248)295-0310
                                 FAX: (248)624-9234

                               Linux Software Library
                    Information File for IP340/1 Analog Input Board
                                        V2.0
                                      04/18/02




               The  information  in this manual is subject to  change
               without notice.   Acromag,  Inc.  makes no warranty of
               any kind with regard to this material and accompanying
               software,  including, but not limited to , the implied
               warranties  of  merchantability  and  fitness  for   a
               particular   purpose.    Acromag,   Inc.   assumes  no
               responsibility for any errors that may appear in  this
               manual and accompanying software.

               See GPL.txt.
































	1. Overview

	This  "information"  file  contains a description of  the Library
	programs used for the following models of Acromag Industrial  I/O
	Boards:

	     IP340 12 Bit Simultaneous Sample and Hold Analog Input Board
	     IP341 14 Bit Simultaneous Sample and Hold Analog Input Board

	2. Introduction

	The Library for the IP340  board  is  implemented as a library of
	"C" functions.	 This will make it possible to utilize the boards
	by  simply linking the user's code with the provided library  and
	making  function  calls for each "command"  to  be  accomplished.
	Most  of the function calls will require a few parameters or  the
	address  of a parameter block to be passed.   The parameters will
	include  the  board  address,	configuration  information,  data
	storage  addresses,   and  status  information.  These  functions
	accomplish the following tasks:


	     - Configuration
	     - Read Status
	     - Read Analog Input


	Also  included  is  a demonstration program which shows  how  the
	library routines are used.  It is also a good program to use when
	first installing the board,  checking it out and learning how  it
	works.


	3. List of Files

	The  Library  software  for  each  Acromag  I/O  board  is  in  a
	correspondingly named subdirectory on the supplied media.  The
	files  which  make  up the  library  software for the IP340 board
	are stored in the subdirectory named "IP340".

	There  are two types of program files provided.   Library program
	files are the files which make up the "library".  Support program
	files contain example programs which show how  to use the library
	programs.












				   1






	3.1 Library Program Files

	The  following  files are included on the supplied  media  and
	make up the actual "library" software.

	     ip340.h	- include file
	     cnfg340.c  - configure
	     rsts340.c  - read status/reference voltage
	     ain340.c	- read data multiple channels
	     mccd340.c  - multiple channel corrected data
	     rwcc340.c  - read/write calibration coefficient
	     mccd340.c  - multiple channel corrected data


	3.2 Support Program Files

	The  following files are included on the supplied media.   The
	test program demonstrates how the library programs may be used.

         drvr340.c  - test program for the boards.
         apc8620.h - include file for carrier support.
         apc8620.c - source file for carrier support.



	4. Software Installation

	The  software is installed by simply copying the library files to
	the  user's  work directory and compiling and  linking  with  the
	user's application program.   The "makefile" provided can be used
	as  an  example of how to integrate the library with  the  user's
	application program.


	5. Hardware Installation

	For proper installation of each Acromag I/O board the user should
	refer  to  the appropriate user's manual.   Following is a  brief
	list of switch  selections  and  connections  which must be made.

	     - Analog input connections.
	     - External trigger connections.


	6. Usage of the Library and Support Programs

	The  software is installed  by copying the supplied files to your
	work  directory and compiling  and linking  with your application
	program.
	It  is recommended that the user read the  User's Manual for  the
	board  and  thoroughly  familiarize themselves with the hardware.

	For a new user to become familiar with the Acromag Library it may
	be  most  "straight forward"  to proceed in the following manner:





				   2






 










             (a) Build and load the Acromag device driver module.

                 i)   See  the  information  file  in  the device driver
                 directory "/home/ip/dev8620/info.txt" for information
                 about building and loading the device driver module.

             (b) Build and execute the Acromag Library Demonstration.

                  i)   Copy the Acromag Library routines from the "Ip340"
                  directory of the source media to a new directory  under
                  /home/ip/ip340.

                  ii)  Copy   the  carrier   support  routines  from  the
                  "carrier" directory  of the  source  media  to  a  new
                  directory  under   /home/ip/carrier. 

                  iii) Use the makefile to build the project.

                  iv)  Launch  the  debugger,  "gdb a.out"  use  the  run 
                  command start the program.

                  v)   The  Acromag  Demonstration  program  menu  should
                  appear  on  the  target processor's  console  terminal.

























				   3






	The following menu is displayed:

	IP340/IP341 Library Demonstration  Rev. A

	1. Exit this Program                11. Correct Data
	2. Set Board Base Address           12. Display Auto Zero Data
	3. Set IP Slot Letter               13. Display Calibration Data
	4. Set Up Configuration Parameters  14. Display Raw Input Data
	5. Read Status Command              15. Display Corrected Data
	6. Enable Interrupts                16. Display Corrected Data In Volts
	7. N/A                              17. Clear All Data Buffers
	8. Acquire Auto Zero Data
	9. Acquire Calibration Data
	10.Acquire Raw Input Data

	Select:


	In preparation to read analog input the user typically
	would make the following sequence of menu selections:

	     Select  2: To set the board base address.
	     Select  3: To set the IP Slot Letter.
	     Select  4: To set up the Configuration Parameters.
	     Select  6: (Optional) To Attach Exception Handler.
	     Select  8: To acquire auto-zero data.
	     Select  9: To acquire calibration data.
	     Select 10: To acquire raw input data.
	     Select 11: Correct data.
	     Select 12: To display auto-zero data.
	     Select 13: To display calibration data.
	     Select 14: To display raw input data.
	     Select 15: To display corrected channel data.
	     Select 16: To display corrected channel data in Volts.


	6.1 Explanation of Main Library Demonstration Menu

	Following is an explanation  of each menu selection:

	     1. Exit this Program

	     This selection causes execution to be returned to the shell.

	     2. Set Board Base Address

	     This  selection  allows the user to set or change  the  base
	     address of the board being used. The value entered here will
	     automatically be entered in  the  Configuration  Structures.

	     3. Set IP Slot Letter

	     This  selection  allows the user to set or change  the  slot
	     letter of the IP module being used.   The value entered here
	     will  automatically  be  entered in  the  Configuration  and
	     Status Block structures.



				   4








	     4. Set Up Configuration Parameters

	     This  selection will cause the Configuration  Parameter Menu
	     to be displayed.	Through that menu it will be  possible to
	     enter values into  the  various  structure  members  of  the
	     Configuration Parameters structure.   See section 6.2 on the
	     Configuration Parameter Menu which follows.

	     5. Read Status Command & ID Command

	     This  menu  selection  will call the rsts340() function  and
	     pass  a pointer which  points  to  the  Configuration  Block
	     structure.   The current status information is read from the
	     board  and written  into this  structure  by  the  rsts340()
             function.    The board  status information is then displayed
	     by the example program.

	     6. Attach Exception Handler

	     This  menu selection allows the user to attach the interrupt
	     handler  for  use  with  the  demonstration  program.   When
	     interrupts  are  enabled  the  start covnersion routine will
	     block until conversions are complete.

	     7. N/A





	     8. Acquire Auto Zero Data

	     This command is used to obtain auto-zero values for the scan
	     array.   Auto-zero  values will  be converted and updated in
	     the auto-zero array.

	     9. Acquire Calibration Data

	     This command is used to obtain  calibration data  values for
	     the scan array.   Calibration  values will  be converted and
	     updated in the calibration array.

	     10. Acquire Raw Input Data

	     This command is used to obtain raw input data values for the
	     scan array.  Each element active in the  scan  array will be
	     converted  and  updated  in  the  raw input data scan array.
	     The scan array parameters are selected in the  Configuration
	     Parameters section.








				   5







	     11. Correct Data

	     This command is used to correct data for  multiple  channels
	     in the data array.   For each element  of  the  data  array,
	     auto-zero,  calibration,  and raw  input  data  are used  to
	     produce the corrected data  value  that  is  placed  in  the
	     corrected data array.

	     12. Display Auto Zero Data

	     This menu selection will display the auto-zero data  buffer.

	     13. Display Calibration Data

	     This  menu  selection  will  display  the  calibration  data
	     buffer.

	     14. Display Raw Input Data

	     This  menu selection will display the raw input data buffer.

	     15. Display Corrected Data

	     This  menu selection will display the corrected data buffer.

	     16. Display Corrected Data In Volts

	     This  menu  selection  will  display  the  contents  of  the
	     corrected data buffer in Volts.

	     17. Clear All Data Buffers

	     This  menu  selection will clear the auto-zero, calibration,
	     raw, and corrected data buffers.
























				   6






	6.2  Explanation of the Configuration Parameter Menu

	This menu  is  displayed  when  the  user  selects  the  "Set  Up
	Configuration"  menu  item from the  Library  Demonstration Menu.
	Through the Configuration Parameter Menu it will be possible  for
	the user to enter values into the Configuration Structure.    The
	Configuration  Structure is  used by  the cnfg340(), and ain340()
	functions.    Following  is the "Set Up Configuration Parameters"
	menu.	All numbers  are  displayed  and entered  in hexadecimal.

		Configuration Parameters

		 1. Return to Previous Menu
		 2. Board Pointer:        ffff0000
		 3. Acquisition Mode:	  0
		 4. Scan Mode:            2
		 5. Enter Channel Bitmap: FFFF
		 6. Conversion Timer0:	  0000FFFF
		 7. Conversion Timer1:	  00000080
		 8. FIFO Threshold:       01FF
		 9. External Trigger:	  0
		10. Interrupt Mode:       1
		11. Interrupt Vector:	  b0

		select:


	     (Note  that  the values in the menu will differ depending on
	     your system.)

	     Following is an explanation of each menu selection:

	     1. Return to Previous Menu

	     This   selection  returns  the  user  to  the  Main  Library
	     Demonstration Menu.

	     2. Board Pointer

	     The  board  base  address is displayed,  however,  the  base
	     address  can  only  be  changed  through  the  Main  Library
	     Demonstration Menu.  This parameter is automatically updated
	     in  the Configuration Block when the user selects  the  "Set
	     Board  Base Address" item in the Main Library  Demonstration
	     Menu.

	     3. Acquisition Mode

	     This selection allows  the user to  enter a  value  for  the
	     Acquisition Mode.  Valid values are as follows:

		                   Value
		                   -----
		  Differential       0
		  Auto Zero          1
		  Calibration        2



				   7







	     4. Scan Mode

	     This selection allows  the user to  enter a  value  for  the
	     Scan Mode.  Valid values are as follows:

	                        Value
	                        -----
	       Disabled           0
	       Single             1
	       Continuous         2


	     5. Channel Bitmap

	     This  selection  allows the user to enter a hexadecimal value
	     ( bits - 15 to 0 ) that select the channels to be converted.


	     6. Conversion Timer0

	     This  selection  allows  the user to enter a value  for  the
	     Conversion Timer0.  The Conversion Timer0 is used to control
	     the frequency at which the conversion cycle is repeated  for
	     channels 0 to 7. The timer value is a 24-bit value and has a
	     minimum  allowed value  restriction of 63 if only channels 0
	     to 7 are enabled, or 127 if channels 8 to 15 are enabled.


	     7. Conversion Timer1

	     This  selection  allows  the user to enter a value  for  the
	     Conversion Timer1.  The Conversion Timer1 is used to control
	     the frequency at which the conversion cycle is repeated  for
	     channels 8 to 15.  The timer value is a 24-bit value and has
	     a minimum allowed value restriction of 63 if only channels 0
	     to 7 are enabled, or 127 if channels 8 to 15 are enabled.


	     8. Full Threshold

	     This  selection  allows  the  user  to  select  a  FIFO full
	     interrupt threshold value.  Values 0 to 511 may be selected.


	     9. External Trigger

	     This  selection  allows  the user to enter a value  for  the
	     External Trigger.  Valid values are as follows:

	                               Value
	                               -----
	       Ext. Trigger Disabled     0
	       Ext. Trigger Input        1
	       Ext. Trigger Output       2




				   8







	     10. Interrupt Mode

	     This  selection  allows  the user to enter a value  for  the
	     Interrupt  Mode.	    The  Demonstration  Program  supports
	     interrupts on input channel  data  acqusition.    Interrupts
	     on auto-zero or calibration data acqusition require the user
	     to  write  their  own  interrupt  service  routines.   Valid
	     values are as follows:

	                              Value
	                              -----
	     Interrupts Disabled        0
	     Interrupt At FIFO Level    1


	     11. Interrupt Vector

	     This  selection  allows  the user to enter a value  for  the
	     Interrupt Vector.


	7. Description of Library Programs.

	Following  are descriptions of the programs and files which  make
	up the library.


	ip340.h - This module contains the definitions and  structures
	used by the library.


	rsts340()  - This  module is used to perform the  "read  status"
	function  for the ip340 board.	  A pointer to the configuration
	structure is passed to this routine.  The routine uses a pointer
	within the configuration structure to reference registers on the
	board and transfers the status information from the board to the
	configuration structure.

	  calling sequence:

	     rsts340(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  configuration structure.













				   9







	convert() - This module is used to read input  channel  data  for
	the IP340  board.   A pointer to the  Configuration  Structure is
	passed to  this routine.    The Configuration Structure  contains
	information used to setup the acquisition mode, channels,  select
	the external trigger,  and to  point to  the  data	storage area.


	  calling sequence:

	     convert(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Structure.


	mccd340() - This module is used  to perform the "correct multiple
	channel data" function  for the IP340 board.   A pointer  to  the
	Configuration Structure is passed to this routine.  The Structure
	contains pointers to the auto-zero, calibration,  raw input data,
	and  corrected  data  buffers.    The  routine  takes  the  auto-
	zero,  calibration,  and  raw  input  data  values as  inputs  to
	the  data  correction  equation.   The  corrected  data  is  then
	placed  into  the  corrected data array that corresponds  to that
	channel.

	  calling sequence:

	     mccd340(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Structure.



	calibrate()  -	 This  module  is  used  to  read  auto-zero  and
	calibration  data  for  the  IP340  board.    A  pointer  to  the
	Configuration  Structure and the mode  (auto-zero or calibration)
	is passed to this routine.   The Configuration Structure contains
	information  used to  setup the  acquisition mode and to point to
	the data storage area.

	  calling sequence:

	     calibrate(ptr, mode);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Structure.
		  mode - (int) The mode to use (auto-zero or calibration).







				  10







	cnfg340() - This module  is used to perform the "Configure Board"
	function  for  the IP340 board.   A  pointer to the Configuration
	Structure is passed to this routine.   The  routine  will  use  a
	pointer  within  the  Configuration  Structure  to  reference the
	registers  on  the  board.    Based  on  items  selected  in  the
	Configuration Structure, the board will be configured and various
	registers will be  updated  with  new information which  will  be
	transferred from the Configuration Structure.

	  calling sequence:

	     cnfg340(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Structure.


	build_control() - This module is used to generate a  control word
	for the IP340 board.   A  pointer to the Configuration  Structure
	is passed to this routine.    The  routine  will  use  a  pointer
	within the Configuration Structure to  reference the registers on
	the  board.    Based  on  items  selected  in  the  Configuration
	Structure,  the  routine  will generate the required control word
	for the IP340 board.

	  calling sequence:

	     build_control(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Structure.


	8. Description of Support Programs

	Following  is  a  description of the support  files  and  program
	modules  which  provide  examples  for  the  use  of  the library
	programs.

	apc8620.c - This  file   provides   carrier   support   routines.


	drvr340.c  - This  is a program which demonstrates the  usage  of
	the library modules.   This program is menu driven and allows the
	user to become familiar with the  IP340  board  and  the  library
	software.   The user may,  through menu  selections,   configure,
	read from, and write to the board.









				   11

