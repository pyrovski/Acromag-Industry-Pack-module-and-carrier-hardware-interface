












                                    Acromag, Inc.
                                  30765 S.Wixom Road
                                    P.O. Box 437
                              Wixom, Michigan 48393-7037

                                Phone: (248)295-0310
                                 FAX: (248)624-9234

                               Linux Software Library
                   Information File for IP320 Analog Input Board
                                        V2.0
                                      04/10/02




               The  information  in this manual is subject to  change
               without notice.   Acromag,  Inc.  makes no warranty of
               any kind with regard to this material and accompanying
               software,  including, but not limited to , the implied
               warranties  of  merchantability  and  fitness  for   a
               particular   purpose.    Acromag,   Inc.   assumes  no
               responsibility for any errors that may appear in  this
               manual and accompanying software.

               See GPL.txt.





























	1. Overview

	This  "information"  file  contains a description of  the Library
	programs used for the  following  Acromag  Industrial  I/O Board:

	     IP320 High Density Analog Input Board


	2. Introduction

	The Library for the IP320  board  is  implemented as a library of
	"C" functions.   This will make it possible to utilize the boards
	by  simply linking the user's code with the provided library  and
	making  function  calls for each "command"  to  be  accomplished.
	Most  of the function calls will require a few parameters or  the
	address  of a parameter block to be passed.   The parameters will
	include  the  board  address,   configuration  information,  data
	storage  addresses,   and  status  information.  These  functions
	accomplish the following tasks:

	     - Configuration
	     - Read Status
	     - Read Analog Input


	Also  included  is  a demonstration program which shows  how  the
	library routines are used.  It is also a good program to use when
	first installing the board,  checking it out and learning how  it
	works.


	3. List of Files

	The Library  software  for  each  Acromag  I/O  board  is  in   a
	correspondingly named subdirectory on the supplied media.  The
	files  which  make  up the  library  software for the IP320 board
	are stored in the subdirectory named "IP320".

	There  are two types of program files provided.   Library program
	files are the files which make up the "library".    Support files
        contain example programs which show  how  the  use  the  library.


	3.1 Library Program Files

	The  following  files are included on the supplied  media  and
	make up the actual "library" software.

	     ip320.h    - include file
	     rsts9510.c - read status
	     ainsc320.c - read data single channel
	     ainmc320.c - read data mulitple channels
	     sccd320.c  - single channel corrected data
	     mccd320.c  - multiple channel corrected data





				  -1-







	3.2 Support Program Files

	The  following files are included on the supplied media.   The
	test program demonstrates how the library programs may be used.

	     drvr320.c - test program for the boards.
         apc8620.h - include file for carrier support.
         apc8620.c - source file for carrier support.


	4. Software Installation

	The  software is installed by simply copying the library files to
	the  user's  work directory and compiling and  linking  with  the
	user's application program.

	5. Hardware Installation

	For proper installation of each Acromag I/O board the user should
	refer  to  the appropriate user's manual.   Following is a  brief
	checklist  of  jumper  selections and connections which  must  be
	made.

	     - Analog input type.
	     - Analog input range.
	     - Analog input data format.
	     - Analog output range.
	     - Analog output data format.
	     - Analog I/O connections at the P2 connector.
	     - External trigger connections, if any, at the P3 connector.


       6. Usage of the Library and Support Programs

       The  software is installed  by copying the supplied files to your
       work  directory and compiling  and linking  with your application
       program.

       It  is recommended that the user read the  User's Manual for  the
       board  and  thoroughly  familiarize themselves with the hardware.

       For a new user to become familiar with the Acromag Library it may
       be  most  "straight forward"  to proceed in the following manner:















				  -2-
























             (a) Build and load the Acromag device driver module.

                 i)   See  the  information  file  in  the device driver
                 directory "/home/ip/dev8620/info.txt" for information
                 about building and loading the device driver module.

             (b) Build and execute the Acromag Library Demonstration.

                  i)   Copy the Acromag Library routines from the "Ip320"
                  directory of the source media to a new directory  under
                  /home/ip/ip320.

                  ii)  Copy   the  carrier   support  routines  from  the
                  "carrier" directory  of the  source  media  to  a  new
                  directory  under   /home/ip/carrier. 

                  iii) Use the makefile to build the project.

                  iv)  Launch  the  debugger,  "gdb a.out"  use  the  run 
                  command start the program.

                  v)   The  Acromag  Demonstration  program  menu  should
                  appear  on  the  target processor's  console  terminal.


















				  -3-






	The following menu is displayed:

	IP320 Library Demonstration  Rev. A

	 1. Exit this Program
	 2. Set Carrier Address
	 3. Set IP Slot Letter
	 4. Set Up Configuration Block Parameters
	 5. Read Status Command
	 6. Read Single Channel Data
	 7. Acquire Auto Zero Values For Scan Array
	 8. Acquire Raw Input Data Values For Scan Array
	 9. Acquire Calibration Data For Scan Array
	10. Correct Data For Single Channel
	11. Correct Data For Scan Array
	12. Display Auto Zero Data
	13. Display Raw Input Data
	14. Display Calibration Data
	15. Display Corrected Data
	16. Display Corrected Data In Volts

	Select:

	In preparation to read a single analog  input the user  typically
	would make the following sequence of menu selections:

	     Select  2: To set the carrier address.
	     Select  3: To set the IP Slot Letter.
	     Select  4: To set up the Configuration Block (auto-zero mode).
	     Select  6: Read single channel data (auto-zero data).
	     Select  4: To set up the Configuration Block (calibration mode).
	     Select  6: Read single channel data (calibration data).
	     Select  4: To set up the Configuration Block (input mode).
	     Select  6: Read single channel data (input data).
	     Select 10: Correct data for single channel.
	     Select 12: To display auto-zero data.
	     Select 13: To display raw input data.
	     Select 14: To display calibration data.
	     Select 15: To display corrected channel data.


	6.1 Explanation of Main Library Demonstration Menu

	Following is an explanation  of each menu selection:

	     1. Exit this Program

	     This selection causes execution to be returned to the shell.

	     2. Set Carrier Address

	     This selection  allows the user to set or change the address
	     of the carrier board being used.







				  -4-





	     3. Set IP Board Base Address

		 This selection allows the user  to  set  or  change the slot
         letter of the IP module being used.   The value entered here
         is automatically  entered in  the  Configuration  and Status
         Block structures.

	     4. Set Up Configuration Block Parameters

	     This  selection will cause the Configuration Block Parameter
	     Menu to be displayed.  Through that menu it will be possible
	     to  enter values into the various structure members  of  the
	     Configuration  Block  structure.   See  section 6.2  on  the
	     Configuration Block Parameter Menu which follows.

	     5. Read Status Command

	     This selection will call the rsts320() function and  pass  a
	     pointer to the Status Block  structure.   The current status
	     information is read from the  board  and  written  into this
	     structure by the rsts320() function.  The status information
	     is then displayed by the program.

	     6. Read Single Channel

	     This command is  used when single  channel input, auto_zero,
	     or calibration  modes are selected.   The channel, mode, and
	     average parameters are  selected in the  Configuration Block
	     Parameters section.

	     7. Acquire Auto Zero Values For Scan Array

	     This command is used to obtain auto-zero values for the scan
	     array.   Each  element  active  in  the  scan  array will be
	     converted  and  updated  in  the  auto-zero scan array.  The
	     scan array and average parameters are selected in the
	     Configuration Block Parameters section.

	     8. Acquire Raw Input Data Values For Scan Array

	     This command is used to obtain raw input data values for the
	     scan array.  Each element active in the  scan  array will be
	     converted  and  updated  in  the  raw input data scan array.
	     The scan array and average parameters are selected in the
	     Configuration Block Parameters section.

	     9. Acquire Calibration Data For Scan Array

	     This command is used to obtain calibration data  values for
	     the scan array.  Each element active in the scan array will
	     be converted and updated in the calibration data scan array.
	     The scan array and average parameters are selected in the
	     Configuration Block Parameters section.







				  -5-






	     10. Correct Data For Single Channel

	     This command is used to correct the data for a single channel.
	     The first data element  of each array, auto-zero, calibration,
	     and  raw  input data  are used  to produce  the corrected data
	     value  that  is  placed  in the first element of the corrected
	     data array.

	     11. Correct Data For Scan Array

	     This command is used to correct data  for  multiple  channels
	     in the scan array.  Each element of the scan array, auto-zero,
	     calibration, and raw  input  data  are  used  to  produce  the
	     corrected  data  value  that  is placed  in the corrected data
	     array.

	     12. Display Auto Zero Data

	     This  menu selection will display the auto-zero  data  buffer.
	     The data is left justified.

	     13. Display Raw Input Data

	     This  menu selection will display the raw input  data  buffer.
	     The data is left justified.

	     14. Display Calibration Data

	     This  menu selection will display the calibration data buffer.
	     The data is left justified.

	     15. Display Corrected Data

	     This  menu selection will display the corrected  data  buffer.
	     The data is left justified.

	     16. Display Corrected Data In Volts

	     This menu selection will display the contents of the corrected
	     data buffer in Volts.


	6.2  Explanation of the Configration Block Parameter Menu

	The  menu  is  displayed  when  the  user  selects  the  "Set  Up
	Configuration Block"  menu  item from the  Library  Demonstration
	Menu.   Through the Configuration Block Parameter Menu it will be
	possible  for  the  user to enter values into  the  Configuration
	Block  structure.   The Configuration Block structure is used  by
	the   ainsc320(), and  ainmc320()  functions.   Following  is the
	"Set Up  Configuration  Block Parameters" menu.  All numbers  are
	displayed and entered in hexadecimal.







				  -6-







	     Configuration Block Parameters

	     1. Return to Previous Menu
	     2. Board Pointer:      FFFF0000
	     3. Input Jumper Range: 2
	     4. Triggering:         0
	     5. Mode:               1
	     6. Gain:               1
	     7. Average:            1
	     8. Channel:            0
	     9. Data Mask:          fff0
	    10. Data Constant:      1000
	    11. Set Up Scan Array
		Scan Array Start:   1ba6c
		Scan Array End:     1ba6c

	    Select:


	     (Note  that  the values in the menu will differ depending on
	     your system.)

	     Following is an explanation of each menu selection:

	     1. Return to Previous Menu

	     This   selection  returns  the  user  to  the  Main  Library
	     Demonstration Menu.

	     2. Board Pointer

	     The  IP board base address is displayed,  however,  the base
	     address  can  only  be  changed  through  the  Main  Library
	     Demonstration Menu.  This parameter is automatically updated
	     in the Configuration Block when the user selects the "Set IP
	     Board  Base Address" item in the  Main  Demonstration  Menu.

	     3. Input Jumper Range

	     This  selection  allows  the  user  to  enter  a  value that
	     corresponds  analog  range  hardware  jumper  configuration.
	     The library routunes need the input  jumper  information  to
	     determine what voltages to use for auto-zero and calibration
	     data samples.  Valid values are as follows:

				 Value
				 -----
		   -5 to +5        1
		  -10 to +10       2
		    0 to +10       3








				  -7-





	     4. Triggering

	     This  selection  allows  the user to enter a value  for  the
	     triggering  parameter.   A  value  of  0  is  used to select
	     software triggering.  A value of 1 selects external trigger.

	     5. Mode

	     This selection allows the user to enter a value for the Mode
	     of operation.  Valid values are as follows:

				 Value
				 -----
		  Differential     1
		  Single ended     2
		  Auto Zero        3
		  Calibration      4

	     6. Gain

	     This selection allows the user to enter a value for the Gain
	     to  be  used  for the conversion of  analog  input  signals.
	     Valid values are as follows:

				 Value
				 -----
		  Gain of 1        1
		  Gain of 2        2
		  Gain of 4        4
		  Gain of 8        8

	     7. Average

	     This  selection  allows the user to enter a  value  for  the
	     number of samples to be averaged together.  Averaging may be
	     used in any mode.   Vaild values are: 1 to 65535.

	     8. Channel

	     This  selection  allows  the user to enter a value  for  the
	     channel to be read by the read single channel function.

	     9. Data Mask

	     This selection allows the user to enter a value for the data
	     mask.  This mask is used to clear the low 4 bits of A/D data
	     when a left justified 12 bit A/D converter is used.  For  16
	     data, the mask may be set to 0xFFFF, this allows 12, 14, and
	     16 bit A/D converters to use the same library software.

	     10. Data Constant

	     This selection allows the user to enter a value for the data
	     scaling constant.   This constant is  used in  the  equation
	     that corrects the raw input data.   A value of  4096 is used
	     for 12 bit data,  a value of 16384 is  used for 14 bit data,
	     and 65536 is used for 16 bit data.



				  -8-






	     11. Set Up Scan Array

	     This selection is used only when Scanning is desired.   This
	     selection will cause a brief menu to be displayed.  The user
	     may  choose  to enter a value for the number elements in the
	     scan  array  and may enter values for the channel number and
	     gain code for each element of the array.


	7. Description of Library Programs.

	Following  are descriptions of the programs and files which  make
	up the library.


	ip320.h - This module contains the definitions and  structures
	used by the library.


	rsts320.c  - This  module is used to perform the  "read  status"
	function  for the ip320 board.   A pointer to the Status Block is
	passed  to this routine.   The routine uses a pointer within  the
	Status  Block to reference registers on the board  and  transfers
	the status information from the board to the Status Block.

	  calling sequence:

	     rsts320(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Status Block structure.




	ainsc320.c  - This  module  is used to perform  the  "read single
	channel data" function for the IP3210 board.   A pointer  to  the
	Configuration Block is passed to this routine.   The routine uses
	a  pointer in the Configuration Block to reference  registers  on
	the  board.   Also  included in the Configuration Block  is  some
	information  which  must be used when the "ainsc320" function  is
	called.   This information is used to  setup the  channel number,
	mode, gain, average, data mask, and to select  the  trigger type.

	  calling sequence:

	     ainsc320(ptr);

	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Block structure.







				  -9-





	ainmc320.c  - This  module  is used to perform the "read multiple
	channel data" function for the IP3210 board.   A pointer  to  the
	Configuration Block is passed to  this routine.   Sequential  and
	Non-sequential scanning  is  accomplished through use of the scan
	array which  contains channel  number and gain code values.   The
	address of  the  scan array  is  contained  in  the Configuration
	Block.  A pointer to the  Configuration Block is passed  to  this
	routine.     The  routine uses the pointer  in the  Configuration
	Block to reference registers on the board.   Also included in the
	Configuration Block is some information which must  be used  when
	the  "ainmc320"  function  is  called.   This information is used
	to setup the mode, gain, the  number  of conversions to  average,
	data mask,  select  the trigger type,  and to  point  to  a  data
	storage area.  Also, the Scan Array, located  with  a pointer  in
	the Configuration Block, is used  for  selecting  the sequence of
	channels to convert and the gains at which to convert them.

	  calling sequence:

	     ainmc320(ptr);
	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Block structure.


	sccd320.c  - This module is used  to perform  the "correct single
	channel data" function for the IP3210 board.   A pointer  to  the
	Configuration Block is passed to this routine.  The configuration
	Block contains pointers to the auto-zero, calibration,  raw input
	data,  and corrected  data buffers.   The routine takes the auto-
	zero[0], calibration[0],  and raw input[0] data values  as inputs
	to the data  correction  equation.   The corrected  data is  then
	placed into the corrected data array[0].

	  calling sequence:

	     sccd320(ptr);
	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Block structure.


	mccd320.c  - This module is used  to perform the "correct mutiple
	channel data" function for the IP320 board.    A pointer  to  the
	Configuration Block is passed to this routine.  The configuration
	Block contains pointers to the auto-zero, calibration,  raw input
	data,  and corrected  data buffers.   The routine takes the auto-
	zero[x], calibration[x],  and raw input[x] data values  as inputs
	to the data  correction  equation.   The corrected  data is  then
	placed  into the corrected data array[x] that corresponds to that
	channel.

	  calling sequence:

	     mccd320(ptr);
	     where:
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Block structure.


				  -10-







	8. Description of Support Programs

	Following  is  a  description of the support  files  and  program
	modules  which  provide  an example of the usage  of  the library
	programs.


	drvr320.c  - This  is a program which demonstrates the  usage  of
	the library modules.   This program is menu driven and allows the
	user  to  familiarize himself  with  the board  and  the  library
	software.  The user may, through menu selections, configure, read
	from and write to the board he is using.

    carrier.c - This  file   provides   carrier   support   routines.












































				  -11-

